version: '3.8'

services:
  mongodb:
    image: "mongo:5.0"
    volumes:
      - "mongodb_data:/data/db"
    networks:
      - graylog
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.nvidia == true"
      labels:
        - shepherd.updates=true

  # For DataNode setup, graylog starts with a preflight UI, this is a change from just using OpenSearch/Elasticsearch.
  # Please take a look at the README at the top of this repo or the regular docs for more info.
  datanode:
    image: graylog/graylog-datanode:6.1
    environment:
      GRAYLOG_DATANODE_NODE_ID_FILE: "/var/lib/graylog-datanode/node-id"
      GRAYLOG_DATANODE_PASSWORD_SECRET: $GRAYLOG_PASSWORD_SECRET
      GRAYLOG_DATANODE_ROOT_PASSWORD_SHA2: $GRAYLOG_ROOT_PASSWORD_SHA2
      GRAYLOG_DATANODE_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "8999:8999/tcp"   # DataNode API
      - "9200:9200/tcp"
      - "9300:9300/tcp"
    volumes:
      - "graylog-datanode:/var/lib/graylog-datanode"
    networks:
      - graylog
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.nvidia == true"
      labels:
        - shepherd.updates=true

  graylog:
    image: graylog/graylog:6.1
    entrypoint: "/usr/bin/tini --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/data/node-id"
      GRAYLOG_PASSWORD_SECRET: $GRAYLOG_PASSWORD_SECRET
      GRAYLOG_ROOT_PASSWORD_SHA2: $GRAYLOG_ROOT_PASSWORD_SHA2
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9005"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9005/"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ports:
    - "5044:5044/tcp"   # Beats
    - "5140:5140/udp"   # Syslog
    - "5140:5140/tcp"   # Syslog
    - "5555:5555/tcp"   # RAW TCP
    - "5555:5555/udp"   # RAW UDP
    - "9005:9000/tcp"   # Server API
    - "12201:12201/tcp" # GELF TCP
    - "12201:12201/udp" # GELF UDP
    - "13301:13301/tcp" # Forwarder data
    - "13302:13302/tcp" # Forwarder config
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
      - "graylog_journal:/usr/share/graylog/data/journal"
    networks:
      - graylog
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.nvidia == true"
      labels:
        - traefik.enable=true
        - traefik.http.routers.graylog-rtr.entrypoints=web
        - traefik.http.routers.graylog-rtr.rule=Host(`graylog.local.sch-apps.com`)
        - traefik.http.routers.graylog-rtr.service=graylog-svc
        - traefik.http.services.graylog-svc.loadbalancer.server.port=9005
        - shepherd.updates=true
        - homepage.group=Eos Swarm Cluster
        - homepage.name=graylog
        - homepage.icon=graylog.png
        - homepage.href=http://graylog.local.sch-apps.com
        - homepage.description=Graylog SIEM

networks:
  graylog:
    name: graylog
    driver: overlay

volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      device: "/mnt/ceph/graylog_data/mongodb"
      o: bind
  graylog-datanode:
    driver: local
    driver_opts:
      type: none
      device: "/mnt/ceph/graylog_data/datanode"
      o: bind
  graylog_data:
    driver: local
    driver_opts:
      type: none
      device: "/mnt/ceph/graylog_data/graylog"
      o: bind
  graylog_journal:
    driver: local
    driver_opts:
      type: none
      device: "/mnt/ceph/graylog_data/graylog_journal"
      o: bind