version: '3.8'

services:
  promtail:
    image: grafana/promtail:latest
    environment:
      - "TZ=America/Chicago"
    volumes:
      - '/mnt/ceph/promtail_data/promtail.yaml:/etc/promtail/docker-config.yaml:ro'
      - '/mnt/ceph/promtail_data/positions:/positions'
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log:/var/log:ro
    command: -config.file=/etc/promtail/docker-config.yaml
    deploy:
      mode: global
      labels:
        - "shepherd.updates=true"
    networks:
      - monitoring

  unpoller:
    image: ghcr.io/unpoller/unpoller:latest
    environment:
      - "TZ=America/Chicago"
    volumes:
      - '/mnt/ceph/unpoller_data/up.conf:/etc/unpoller/up.conf'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.connection == standard"
      labels:
        - "shepherd.updates=true"
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    deploy:
      mode: global
      labels:
        - "shepherd.updates=true"
    networks:
      - outside

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8085:8080
    deploy:
      mode: global
      labels:
        - "shepherd.updates=true"
    networks:
      - outside

  dcgm_exporter:
    image: nvcr.io/nvidia/k8s/dcgm-exporter:latest
    environment:
      - DCGM_EXPORTER_NO_HOSTNAME=0
    cap_add:
      - SYS_ADMIN
    ports:
      - "9400:9400"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.nvidia == true"
      labels:
        - "shepherd.updates=true"
    networks:
      - outside

volumes:
  telegraf_data:
    driver: local
  promtail_data:
    driver: local

networks:
  monitoring:
    external: true
  outside:
    external:
      name: "host"