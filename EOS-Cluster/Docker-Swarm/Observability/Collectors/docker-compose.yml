version: '3.8'

services:
  telegraf-standard:
    image: telegraf
    environment:
      - "TZ=America/Chicago"
    hostname: "{{.Node.Hostname}}"
    volumes:
    - '/mnt/ceph/telegraf_data/standard/telegraf.conf:/etc/telegraf/telegraf.conf:ro'
    - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      mode: global
      labels:
        - "shepherd.updates=true"
      placement:
        constraints: 
          - "node.labels.nvidia != true"
    networks:
      - monitoring

  telegraf-gpu:
    image: telegraf
    environment:
      - "TZ=America/Chicago"
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=utility
    hostname: "{{.Node.Hostname}}"
    volumes:
    - '/mnt/ceph/telegraf_data/gpu/telegraf.conf:/etc/telegraf/telegraf.conf:ro'
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /usr/bin/nvidia-smi:/usr/bin/nvidia-smi:ro
    deploy:
      mode: global
      labels:
        - "shepherd.updates=true"
      placement:
        constraints: 
          - "node.labels.nvidia == true"
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    environment:
      - "TZ=America/Chicago"
    volumes:
      - '/mnt/ceph/promtail_data/promtail.yaml:/etc/promtail/docker-config.yaml:ro'
      - '/mnt/ceph/promtail_data/positions:/positions'
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log:/var/log:ro
    command: -config.file=/etc/promtail/docker-config.yaml
    deploy:
      mode: global
      labels:
        - "shepherd.updates=true"
    networks:
      - monitoring

  unpoller:
    image: ghcr.io/unpoller/unpoller:latest
    environment:
      - "TZ=America/Chicago"
    volumes:
      - '/mnt/ceph/unpoller_data/up.conf:/etc/unpoller/up.conf'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.connection == standard"
      labels:
        - "shepherd.updates=true"
    networks:
      - monitoring

  varken:
    image: boerderij/varken
    volumes:
      - '/mnt/ceph/varken_data:/config'
    environment:
      - TZ=America/Chicago
      - VRKN_GLOBAL_SONARR_SERVER_IDS=1
      - VRKN_GLOBAL_RADARR_SERVER_IDS=1
      - VRKN_GLOBAL_LIDARR_SERVER_IDS=false
      - VRKN_GLOBAL_TAUTULLI_SERVER_IDS=1
      - VRKN_GLOBAL_OMBI_SERVER_IDS=false
      - VRKN_GLOBAL_SICKCHILL_SERVER_IDS=false
      - VRKN_GLOBAL_UNIFI_SERVER_IDS=false
      - VRKN_GLOBAL_MAXMIND_LICENSE_KEY=$MAXMIND_LICENSE_KEY
      - VRKN_INFLUXDB_URL=influxdb
      - VRKN_INFLUXDB_PORT=8086
      - VRKN_INFLUXDB_SSL=false
      - VRKN_INFLUXDB_VERIFY_SSL=false
      - VRKN_INFLUXDB_USERNAME=$varken_influx_db_user
      - VRKN_INFLUXDB_PASSWORD=$varken_influx_db_password
      - VRKN_TAUTULLI_1_URL=192.168.6.7:8181
      - VRKN_TAUTULLI_1_FALLBACK_IP=plex_tautulli:8181
      - VRKN_TAUTULLI_1_APIKEY=$tautulli_api_key
      - VRKN_TAUTULLI_1_SSL=false
      - VRKN_TAUTULLI_1_VERIFY_SSL=false
      - VRKN_TAUTULLI_1_GET_ACTIVITY=true
      - VRKN_TAUTULLI_1_GET_ACTIVITY_RUN_SECONDS=30
      - VRKN_TAUTULLI_1_GET_STATS=true
      - VRKN_TAUTULLI_1_GET_STATS_RUN_SECONDS=3600
      - VRKN_SONARR_1_URL=192.168.6.7:8989
      - VRKN_SONARR_1_APIKEY=$sonarr_api_key
      - VRKN_SONARR_1_SSL=false
      - VRKN_SONARR_1_VERIFY_SSL=false
      - VRKN_SONARR_1_MISSING_DAYS=7
      - VRKN_SONARR_1_MISSING_DAYS_RUN_SECONDS=300
      - VRKN_SONARR_1_FUTURE_DAYS=1
      - VRKN_SONARR_1_FUTURE_DAYS_RUN_SECONDS=300
      - VRKN_SONARR_1_QUEUE=true
      - VRKN_SONARR_1_QUEUE_RUN_SECONDS=300
      - VRKN_RADARR_1_URL=192.168.6.7:7878
      - VRKN_RADARR_1_APIKEY=$radarr_api_key
      - VRKN_RADARR_1_SSL=false
      - VRKN_RADARR_1_VERIFY_SSL=false
      - VRKN_RADARR_1_QUEUE=true
      - VRKN_RADARR_1_QUEUE_RUN_SECONDS=300
      - VRKN_RADARR_1_GET_MISSING=true
      - VRKN_RADARR_1_GET_MISSING_RUN_SECONDS=300
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.connection == standard"
      labels:
        - "shepherd.updates=true"
    networks:
      - monitoring

volumes:
  telegraf_data:
    driver: local
  promtail_data:
    driver: local
  varken_data:
    driver: local

networks:
  monitoring:
    external: true