version: '3.8'

services:
  grafana:
    image: grafana/grafana-oss
    ports:
      - '3000:3000'
    environment:
      - TZ=America/Chicago
    volumes:
      - '/mnt/ceph/grafana_data:/var/lib/grafana'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.connection == standard"
      labels:
        - "shepherd.updates=true"
    networks:
      - monitoring

  loki:
    image: grafana/loki:2.7.5
    ports:
      - '3100:3100'
    environment:
      - TZ=America/Chicago
    volumes:
      - '/mnt/ceph/loki_data:/etc/loki'
    command: -config.file=/etc/loki/local-config.yaml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.connection == standard"
      labels:
        - "shepherd.updates=true"
    networks:
      - monitoring

  uptime-kuma:
    image: louislam/uptime-kuma:1
    volumes:
      - '/mnt/ceph/uptime-kuma_data:/app/data'
    ports:
      # <Host Port>:<Container Port>
      - 3001:3001
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.connection == standard"
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.uptime-kuma-rtr.entrypoints=web"
        - "traefik.http.routers.uptime-kuma-rtr.rule=Host(`uptime-kuma.local.sch-apps.com`)"
        - "traefik.http.routers.uptime-kuma-rtr.service=uptime-kuma-svc"
        - "traefik.http.services.uptime-kuma-svc.loadbalancer.server.port=3001"
        - "shepherd.updates=true"
    networks:
      - monitoring
      - dockerproxy
      - media
      - local_proxy

  prometheus:
    image: prom/prometheus
    volumes:
      - '/mnt/ceph/prometheus_data/prometheus.yml:/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.connection == standard"
      labels:
        - "shepherd.updates=true"
    networks:
      - monitoring

volumes:
  grafana_data:
    driver: local
  influxdb_data:
    driver: local
  chronograf_data:
    driver: local
  loki_data:
    driver: local
  uptime-kuma_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  monitoring:
    name: monitoring
    driver: overlay
    attachable: true
  dockerproxy:
    external: true
  media:
    external: true
  local_proxy:
    external: true