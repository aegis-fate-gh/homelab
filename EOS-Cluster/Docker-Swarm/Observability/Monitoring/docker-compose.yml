version: '3.8'

services:
  grafana:
    image: grafana/grafana-oss
    ports:
      - '3000:3000'
    environment:
      - TZ=America/Chicago
    volumes:
      - '/mnt/ceph/grafana_data:/var/lib/grafana'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.connection == standard"
      labels:
        - traefik.enable=true
        - traefik.http.routers.grafana-rtr.entrypoints=web
        - traefik.http.routers.grafana-rtr.rule=Host(`grafana.local.sch-apps.com`)
        - traefik.http.routers.grafana-rtr.service=grafana-svc
        - traefik.http.services.grafana-svc.loadbalancer.server.port=3000
        - shepherd.updates=true
        - homepage.group=Eos Swarm Cluster
        - homepage.name=Grafana
        - homepage.icon=grafana.png
        - homepage.href=http://grafana.local.sch-apps.com
        - homepage.description=Dashboarding and metrics
    networks:
      - monitoring
      - local_proxy

  uptime-kuma:
    image: louislam/uptime-kuma:1
    volumes:
      - '/mnt/ceph/uptime-kuma_data:/app/data'
    ports:
      # <Host Port>:<Container Port>
      - 3001:3001
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.connection == standard"
      labels:
        - traefik.enable=true
        - traefik.http.routers.uptime-kuma-rtr.entrypoints=web
        - traefik.http.routers.uptime-kuma-rtr.rule=Host(`uptime-kuma.local.sch-apps.com`)
        - traefik.http.routers.uptime-kuma-rtr.service=uptime-kuma-svc
        - traefik.http.services.uptime-kuma-svc.loadbalancer.server.port=3001
        - shepherd.updates=true"
        - homepage.group=Eos Swarm Cluster
        - homepage.name=Uptime-Kuma
        - homepage.icon=uptime-kuma.png
        - homepage.href=http://uptime-kuma.local.sch-apps.com
        - homepage.description=External service status
    networks:
      - monitoring
      - dockerproxy
      - media
      - local_proxy

  chronograf:
    image: chronograf:latest
    ports:
      - '8888:8888'
    volumes:
      - '/mnt/ceph/chronograf_data:/usr/lib/chronograf'
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=$INFLUXDB_ADMIN_USER
      - INFLUXDB_PASSWORD=$INFLUXDB_ADMIN_PASSWORD
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - "node.role == worker"
          - "node.labels.connection == standard"
      labels:
        - traefik.enable=true
        - traefik.http.routers.chronograf-rtr.entrypoints=web
        - traefik.http.routers.chronograf-rtr.rule=Host(`chronograf.local.sch-apps.com`)
        - traefik.http.routers.chronograf-rtr.service=chronograf-svc
        - traefik.http.services.chronograf-svc.loadbalancer.server.port=8888
        - shepherd.updates=true
        - homepage.group=Eos Swarm Cluster
        - homepage.name=Chronograf
        - homepage.icon=chronograf.png
        - homepage.href=http://chronograf.local.sch-apps.com
        - homepage.description=InxluxDB Management
    networks:
      - monitoring
      - local_proxy

  backup:
    image: offen/docker-volume-backup:v2
    environment:
      - BACKUP_FILENAME=monitoring-%Y-%m-%dT%H-%M-%S.tar.gz
      - BACKUP_CRON_EXPRESSION=0 6 * * * #Run at 6:00am UTC, 1:00AM CST
      - BACKUP_PRUNING_PREFIX=monitoring-
      - BACKUP_RETENTION_DAYS=5
      - GZIP_PARALLELISM=3
    volumes:
      - /dev/shm:/tmp
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /mnt/ceph/chronograf_data:/backup/chronograf:ro
      - /mnt/ceph/uptime-kuma_data:/backup/uptime-kuma:ro
      - /mnt/ceph/grafana_data:/backup/grafana:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/hdd_pool/cloud/OneDrive/Storage/Eos_Backups:/archive
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 500M
      placement:
        constraints: 
          - "node.role == manager"
      labels:
        - shepherd.updates=true

volumes:
  grafana_data:
    driver: local
  chronograf_data:
    driver: local
  uptime-kuma_data:
    driver: local

networks:
  monitoring:
    name: monitoring
    driver: overlay
    attachable: true
  dockerproxy:
    external: true
  media:
    external: true
  local_proxy:
    external: true