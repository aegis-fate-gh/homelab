version: '3.8'

services:
  internal-reverse-proxy:
    image: traefik:v2.11
    command: 
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode=true
      - --providers.docker.network=local_proxy
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --entryPoints.web.forwardedHeaders.trustedIPs=192.168.6.90/24, 10.0.0.0/24
      - --entryPoints.web.transport.respondingTimeouts.readTimeout=300
      - --entryPoints.web.transport.respondingTimeouts.writeimeout=300
      - --entryPoints.web.transport.respondingTimeouts.idleTimeout=300
      - --entryPoints.websecure.transport.respondingTimeouts.readTimeout=300
      - --entryPoints.websecure.transport.respondingTimeouts.writeimeout=300
      - --entryPoints.websecure.transport.respondingTimeouts.idleTimeout=300
      - --metrics.prometheus=true
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8081:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - local_proxy
      - outside
    deploy:
      mode: global
      placement:
        constraints:
          - "node.role == manager"
      labels:
        - "shepherd.updates=true"

volumes:
  traefik_data:
    driver: local

networks:
  local_proxy:
    name: local_proxy
    driver: overlay
    attachable: true
  outside:
    external: true
    name: host